package htmlComponents

import (
    "strconv"
    "gofi/gofi/data/appdata"
)

templ FormSubmit(id string, icon string, name string) {
    <button id={id} type="submit" value="Submit">
        <span id="spinner" class="htmx-indicator" aria-busy="true"></span>
        <svg width="24" height="24" viewBox="0 0 24 24"><use xlink:href={icon}></use></svg>
        {name}
    </button>
}

templ button(id string, icon string, name string, class string) {
    <button id={id} class={ class } type="submit">
        <svg width="24" height="24" viewBox="0 0 24 24"><use xlink:href={icon}></use></svg>
        {name}
    </button>
}

templ formEmailPasswordInput() {
    <label for="Email">Email</label>
    <input type="Email" id="Email" name="Email" placeholder="exemple@gmail.com" required />

    <label for="Password">Mot de passe</label>
    <input type="Password" id="Password" name="Password" required />

    <div id="htmxInfo"></div>
}

templ dateInput(dateStr string, idAndName string) {
    <!-- Date-->
    <label for={ idAndName }>
        <!-- calendar = Date -->
        <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-calendar"></use></svg>
        Date
    </label>
    <input type="date" id={ idAndName } name={ idAndName } value={ dateStr } required />
}

templ accountInput(idName string, accountList []string, forceSelect bool, defaultValue string) {
    <!-- Select -->
    <label for={idName}>
        <!-- landmark = Compte -->
        <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-landmark"></use></svg>
        Compte
    </label>
    <select id={idName} name={idName} required>
        if forceSelect {
            <option value="" selected>-</option>
        }
        for _, item := range accountList {
            if item == defaultValue {
                <option value={item} selected>{item}</option>
            } else {
                <option value={item}>{item}</option>
            }
        }
    </select>
}

templ modeInput(activateStandardMode bool) {
    <!-- Select -->
    <label for="modeStr">
        <!-- lucide-hand-coins -->
        <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-hand-coins"></use></svg>
        Mode (<code>simple</code> ou <code>prêt/emprunt</code>)
    </label>
    <select id="modeStr" name="modeStr" required>
        if activateStandardMode {
            <option value="0">Saisie simple</option>
        }
        <option value="4">On me rembourse un prêt</option>
        <option value="3">Je rembourse un emprunt</option>
        <option value="2">Je prête</option>
        <option value="1">J'emprunte</option>
    </select>
}

templ whoDataList(lbListActive []appdata.LenderBorrower) {
    <div id="whoDiv">
        <!-- Select -->
        <label for="who">
            <!-- lucide-user-search -->
            <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-user-search"></use></svg>
            De/à qui?
        </label>
        <select id="who" name="who" required>
            for _, lb := range lbListActive {
                <option value={ lb.Name }>{ lb.Name }</option>
            }
            <option value="-">-</option>
        </select>
        <input type="text" id="createLenderBorrowerName" name="createLenderBorrowerName" placeholder="créer un nouveau tier" disabled />
    </div>
}

templ categoriesCustomRadioInput(uc *appdata.UserCategories, inputName string, categoryNumber int) {
    // categoryNumber is here to preselect a category in the list
    <!-- Custom Radios Select Dropdown -->
    <span id="categoryLabel">
        <!-- boxes = Catégorie -->
        <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-tag"></use></svg>                            
        Catégorie
    </span>
    <details id="categoryDropdown" class="dropdown">
        <summary>
            <span id="summaryIcon" class={ "icomoon", uc.Categories[categoryNumber].IconCodePoint }>&#x{ uc.Categories[categoryNumber].IconCodePoint };</span>
            <span id="summaryCategory">{ uc.Categories[categoryNumber].Name }</span>
        </summary>
        <ul id="overflowLimitHeight">
            for i, category := range uc.Categories {
                <li>
                    <label>
                        if i == categoryNumber {
                            <input id={ "input"+strconv.Itoa(i) } type="radio" name={ inputName } value={ category.Name } checked/>
                        } else {
                            <input id={ "input"+strconv.Itoa(i) } type="radio" name={ inputName } value={ category.Name }/>
                        }
                        <span id={ "icon"+strconv.Itoa(i) } class={ "icomoon", category.IconCodePoint }>&#x{ category.IconCodePoint };</span>
                        { category.Name }
                    </label>
                </li>
            }
        </ul>
    </details>
}

templ amountInput(idName string, defaultValue string) {
    <!-- Number -->
    <label for={ idName }>
        <!-- banknote = Montant -->
        <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-banknote"></use></svg>
        Montant
    </label>
    if defaultValue != "" {
        <input type="number" id={ idName } name={ idName } min="0.00" max="100000.00" step="0.01" value={ defaultValue } required />
    } else {
        <input type="number" id={ idName } name={ idName } min="0.00" max="100000.00" step="0.01" required />
    }
}

templ amountDirectionRadio(defaultCheck string, nameStr string) {
    <!-- Radio buttons -->
    <legend>Type</legend>
    <label for="gain">
        if defaultCheck == "gain" {
            <input type="radio" id="gain" name={ nameStr } value="gain" checked />
        } else {
            <input type="radio" id="gain" name={ nameStr } value="gain" />
        }
        <!-- trending up -->
        <svg width="24" height="24" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#feather-trending-up"></use></svg>
        Gain
    </label>
    <label for="expense">
        if defaultCheck == "expense" {
            <input type="radio" id="expense" name={ nameStr } value="expense" checked />
        } else {
            <input type="radio" id="expense" name={ nameStr } value="expense" />
        }
        <!-- trending down -->
        <svg width="24" height="24" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#feather-trending-down"></use></svg>
        Dépense
    </label>
}

templ textInput(idName string, defaultValue string) {
    <!-- Text -->
    <label for={ idName }>
        <!-- text = Designation -->
        <svg stroke="currenColor" width="18" heigth="18" viewBox="0 0 24 24"><use xlink:href="/img/icons.svg#lucide-text"></use></svg>
        Désignation
    </label>
    if defaultValue == "" {
        <input type="text" id={ idName } name={ idName } placeholder="(Facultatif) description de la transaction"/>
    } else {
        <input type="text" id={ idName } name={ idName } placeholder="(Facultatif) description de la transaction" value={ defaultValue }/>
    }
}